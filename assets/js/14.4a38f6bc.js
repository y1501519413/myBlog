(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{136:function(e,a,n){"use strict";n.r(a);var s=n(3),l=Object(s.a)({},function(){var e=this,a=e.$createElement,n=e._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"vue打包优化-提取vendor"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vue打包优化-提取vendor","aria-hidden":"true"}},[e._v("#")]),e._v(" Vue打包优化 --提取vendor")]),e._v(" "),n("p",[e._v("公用库提取，后续打包不再打包这些库")]),e._v(" "),n("p",[e._v(":::\ntip Front matter variables are "),n("strong",[e._v("optional")]),e._v(" in VuePress.\n:::")]),e._v(" "),n("h2",{attrs:{id:"安装依赖"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装依赖","aria-hidden":"true"}},[e._v("#")]),e._v(" 安装依赖")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("npm install clean-webpack-plugin@^1.0.0 add-asset-html-webpack-plugin@2.1.0 --D\n")])])]),n("h2",{attrs:{id:"build-目录下创建-webpack-dll-conf-js"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#build-目录下创建-webpack-dll-conf-js","aria-hidden":"true"}},[e._v("#")]),e._v(" build 目录下创建 webpack.dll.conf.js")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("// 处理第三方库，先行打包第三方库，告诉webpack后续不再处理\nconst webpack = require('webpack')\nconst path = require('path')\nconst CleanWebpackPlugin = require('clean-webpack-plugin')\nconst dllPath = path.resolve(__dirname, '../src/assets/dll') // dll文件存放的目录\n\nmodule.exports = {\n  entry: { // 把 vue 相关模块的放到一个单独的动态链接库\n    vue: ['axios', 'vue', 'vue-router', 'vuex', 'element-ui','NProgress']\n  },\n  output: {\n    filename: '[name]-[hash].dll.js', // 生成vue.dll.js\n    path: dllPath, // 输出路径\n    library: '_dll_[name]' // 证书名称\n  },\n  plugins: [\n    new CleanWebpackPlugin(['*.js'], { // 清除已存在的dll文件\n      root: dllPath\n    }),\n    new webpack.DefinePlugin({\n      'process.env': {\n        NODE_ENV: 'production' // 设置环境变量\n      }\n    }),\n    new webpack.DllPlugin({\n      name: '_dll_[name]', // manifest.json 描述动态链接库包含了哪些内容\n      path: path.join(__dirname, './', '[name].dll.manifest.json')\n    }),\n    // 压缩代码\n    new webpack.optimize.UglifyJsPlugin({\n      compress: {\n        warnings: false,\n        pure_funcs: ['console.log']\n      },\n      sourceMap: false\n    })\n  ]\n}\n")])])]),n("h2",{attrs:{id:"在-package-json-中新增-dll-构建命令"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#在-package-json-中新增-dll-构建命令","aria-hidden":"true"}},[e._v("#")]),e._v(" 在 package.json 中新增 dll 构建命令")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('"scripts": {    \n  "dll": "webpack --config build/webpack.dll.conf.js" // dll打包命令\n},\n')])])]),n("h2",{attrs:{id:"修改-build-webpack-prod-conf-js"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#修改-build-webpack-prod-conf-js","aria-hidden":"true"}},[e._v("#")]),e._v(" 修改 build/webpack.prod.conf.js")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("const AddAssetHtmlPlugin = require('add-asset-html-webpack-plugin')\nplugins: [    \n  // 引用 manifest.json\n  new webpack.DllReferencePlugin({\n    manifest: require('./vue.dll.manifest.json')\n  }),    \n  // 将 dll 注入到 生成的 html 模板中\n  new AddAssetHtmlPlugin({\n    filepath: path.resolve(__dirname, '../src/assets/dll/*.js'), // dll文件位置\n    publicPath: config.build.assetsPublicPath + utils.assetsPath('dll/'), // dll 引用路径\n    outputPath: config.build.assetsPublicPath + utils.assetsPath('dll/'), // dll最终输出的目录\n    includeSourcemap: false\n    // hash: true,\n  }),\n]\n")])])]),n("h2",{attrs:{id:"修改-build-webpack-dev-conf-js"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#修改-build-webpack-dev-conf-js","aria-hidden":"true"}},[e._v("#")]),e._v(" 修改 build/webpack.dev.conf.js")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("const AddAssetHtmlPlugin = require('add-asset-html-webpack-plugin')\nplugins: [    \n  // 引用 manifest.json\n  new webpack.DllReferencePlugin({\n    manifest: require('./vue.dll.manifest.json')\n  }),    \n  // 将 dll 注入到 生成的 html 模板中\n  new AddAssetHtmlPlugin({\n    filepath: path.resolve(__dirname, '../src/assets/dll/*.js'), // dll文件位置\n    publicPath: utils.assetsPath('dll/'), // dll 引用路径\n    outputPath: utils.assetsPath('dll/'), // dll最终输出的目录\n    includeSourcemap: false\n    // hash: true,\n  }),\n]\n")])])])])},[],!1,null,null,null);a.default=l.exports}}]);